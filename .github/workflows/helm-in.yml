name: "helm-in"

on:
  push:
    branches-ignore:
    - "ga-ignore-*"
  pull_request:
    branches-ignore:
    - "ga-ignore-*"
  schedule:
  - cron: '8 0 * * *'
  - cron: '12 0 * * *'
  - cron: '20 0 * * *'
  - cron: '21 0 * * *'
  - cron: '23 0 * * *'

env:
  SOURCE: Hanra-s-work/redesigned-system-lem-in
  MIRROR: "EpitechPromo2027/B-CPE-200-PAR-2-1-lemin-thomas.lebouc"
  EXECUTABLE: "helm_in"
  EPITEST_DOCKER: ghcr.io/epitech/coding-style-checker:latest
  GITHUB_SSH_KEY: ${{ secrets.MY_LEM_IN_PRIVATE_SSH_KEY }}
  BASH_CHECKER: bonus/side_data/action_data/check_results_v2.sh
  CODING_STYLE_CHECKER: bonus/side_data/action_data/marvinette.sh
  COMPILATION_CHECKER: bonus/side_data/action_data/check_if_compiles.sh
  FUNCTIONAL_TESTS_PATH: bonus/side_data/action_data/ftests/
  FUNCTIONAL_TESTS_NAME: ftest_main.sh

jobs:

  check_coding_style:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: assign execution rights to check.sh
      run: chmod +x ./check.sh
    - name: run check.sh
      run: ./check.sh $(pwd) $(pwd)
    - name: checking the results
      run: chmod +x ./$BASH_CHECKER && ./$BASH_CHECKER

  check_if_compiles:
    runs-on: ubuntu-latest
    needs: check_coding_style
    if: success()
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Compile program
      run: chmod +x $COMPILATION_CHECKER && ./$COMPILATION_CHECKER

  check_functional_tests:
    runs-on: ubuntu-latest
    needs: check_if_compiles
    if: success()
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Compile program
      run: make NAME=$EXECUTABLE
    - name: run_tests
      run: |
        OLD_DIR="$FUNCTIONAL_TESTS_PATH"
        NEW_DIR=""
        for dir in $(echo $OLD_DIR | tr "/" "\n"); do
          if [ "$dir" == "." ]; then
            NEW_DIR+="./"
          else
            NEW_DIR+="../"
          fi
        done
        cd $FUNCTIONAL_TESTS_PATH
        chmod +x $FUNCTIONAL_TESTS_NAME
        cp $NEW_DIR/$EXECUTABLE ./$EXECUTABLE
        ./$FUNCTIONAL_TESTS_NAME ./$EXECUTABLE

  repository_mirroring:
    runs-on: ubuntu-latest
    needs: check_if_compiles
    if: success()
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Push the content to the mirror repository
      uses: pixta-dev/repository-mirroring-action@v1
      with:
        target_repo_url: git@github.com:${{ env.MIRROR }}.git
        ssh_private_key: ${{ env.GITHUB_SSH_KEY }}
